bookdown:::serve_book()
bookdown:::serve_book()
read.csv(here("data", "my_data.csv"))
read.csv(here::here("data", "my_data.csv"))
# Load data
sales <- read.csv(here("data", "my_data.csv"))
library(ggplot2)
library(dplyr)
library(here)
# Load data
sales <- read.csv(here("data", "my_data.csv"))
ggplot(sales, aes(x = Product, y = Sales, fill = Product)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Product Comparison")
ggplot(sales_data, aes(x = Date, y = Sales, fill = Product)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = paste("Sales for...")
)
ggplot(sales, aes(x = Date, y = Sales, fill = Product)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = paste("Sales for..."))
#| label: remote-data
#| cache: true
#| message: false
# URL to a stable dataset
url <- "https://raw.githubusercontent.com/tidyverse/ggplot2/master/data-raw/diamonds.csv"
# Download and read the data
remote_data <- read_csv(url)
# Display the data
head(remote_data)
??read_csv
#| label: remote-data
#| cache: true
#| message: false
# URL to a stable dataset
url <- "https://raw.githubusercontent.com/tidyverse/ggplot2/master/data-raw/diamonds.csv"
# Download and read the data
remote_data <- readr::read_csv(url)
# Display the data
head(remote_data)
R.version.string
?knitr
#| label: data-loading
#| message: false
#| warning: false
library(tidyverse)
library(here)
# Load data using project-relative path
data <- read_csv(here("data", "my_data.csv"))
head(data)
#| label: builtin-data
# Load a dataset from a package
data(diamonds, package = "ggplot2")
# Display the first few rows
head(diamonds)
#| label: synthetic-data
# Create synthetic data
set.seed(0491)  # For reproducibility
synthetic_data <- tibble(
id = 1:20,
value_x = rnorm(20),
value_y = value_x * 2 + rnorm(20, sd = 0.5),
category = sample(LETTERS[1:4], 20, replace = TRUE)
)
# Display the data
head(synthetic_data)
#| label: remote-data
#| cache: true
#| message: false
# URL to a stable dataset
url <- "https://raw.githubusercontent.com/tidyverse/ggplot2/master/data-raw/diamonds.csv"
# Download and read the data
remote_data <- readr::read_csv(url)
# Display the data
head(remote_data)
#| label: dynamic-mermaid
#| output: asis
# Define the steps in a data pipeline
steps <- c("Import Data", "Clean Data", "Feature Engineering",
"Split Dataset", "Train Model", "Evaluate", "Deploy")
# Generate Mermaid flowchart code
mermaid_code <- c(
"```{mermaid}",
"flowchart LR"
)
# Add connections between steps
for (i in 1:(length(steps)-1)) {
mermaid_code <- c(
mermaid_code,
sprintf("    %s[\"%s\"] --> %s[\"%s\"]",
LETTERS[i], steps[i],
LETTERS[i+1], steps[i+1])
)
}
mermaid_code <- c(mermaid_code, "```")
# Output the Mermaid code
cat(paste(mermaid_code, collapse = "\n"))
reticulate::repl_python()
reticulate::repl_python()
